name: CD

on:
  push:
    branches:
      - master

jobs:

  setup:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Install gothub
        run: |
          go get github.com/itchio/gothub
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Set environment variables
        run: |
          echo ::set-env name=GITHUB_USER::$( echo ${{ github.repository }} | cut -d/ -f1 )
          echo ::set-env name=GITHUB_REPO::$( echo ${{ github.repository }} | cut -d/ -f2 )
      - name: Move/Create continuous tag
        run: |
          git tag --force continuous ${{ github.sha }}
          git push --tags --force
      - name: If necessary, create continuous release
        run: |
          if ! gothub info -t continuous > /dev/null 2>&1; then
            gothub release \
              --tag continuous \
              --name "Continuous Build" \
              --description "This is an automated build of the latest source. It may be unstable or even crash, corrupt your save or eat your kitten. Use with caution!" \
              --pre-release
          fi

  ubuntu_x86_64:
    runs-on: ubuntu-latest
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OUTPUT: endless-sky-amd64-${{ github.sha }}.tar.gz
    steps:
      - uses: actions/checkout@v2
      - name: Install gothub
        run: |
          go get github.com/itchio/gothub
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Install dependencies
        run: |
          sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail # Speed up installation and get rid of unwanted lists
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libsdl2-dev libpng-dev libjpeg-turbo8-dev libopenal-dev libmad0-dev libglew-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev scons
      - name: Adjust version strings
        run: |
          perl -p -i -e 's/(Endless Sky) [\d.]+/$1 ${{ github.sha }}/ig' source/main.cpp
          perl -p -i -e "s/version [\d.]+/$(git log --pretty="format:%nBuilt: $(date -u '+%Y-%m-%d %H:%M') UTC%nLast change by %an: %n %s" -1 | fmt -w 33 -c -s)/ig" credits.txt
        shell: bash
      - name: Build Application
        run: scons -j $(nproc)
      - name: Package Application
        run: tar -czf ${{ env.OUTPUT }} sounds images/ data/ license.txt keys.txt icon.png endless-sky credits.txt copyright changelog
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}
      - name: Upload to continuous release
        run: |
          gothub upload \
            --user "$(echo ${{ github.repository }} | cut -d/ -f1)" \
            --repo "$(echo ${{ github.repository }} | cut -d/ -f2)" \
            --tag continuous \
            --name ${{ env.OUTPUT }} \
            --file ${{ env.OUTPUT }}

  windows_win64:
    runs-on: windows-latest
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DIR_MINGW64: C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32
      DIR_ESLIB: .\dev64
      OUTPUT: EndlessSky-win64-${{ github.sha }}.zip
    steps:
      - uses: actions/checkout@v2
      - name: Install gothub
        run: |
          go get github.com/itchio/gothub
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Fetch development libraries
        run: |
          Invoke-WebRequest https://endless-sky.github.io/win64-dev.zip -OutFile win64-dev.zip
          Expand-Archive win64-dev.zip -DestinationPath . -Force
          Remove-Item win64-dev.zip
      - name: Adjust version strings
        run: |
          perl -p -i -e 's/(Endless Sky) [\d.]+/$1 ${{ github.sha }}/ig' source/main.cpp
          perl -p -i -e "s/version [\d.]+/$(git log --pretty="format:%nBuilt: $(date -u '+%Y-%m-%d %H:%M') UTC%nLast change by %an: %n %s" -1 | fmt -w 33 -c -s)/ig" credits.txt
        shell: bash
      - name: Build Application
        run: |
          make -e -f .winmake -j ($(Get-CIMInstance -Class 'CIM_Processor').NumberOfLogicalProcessors)
          COPY .\bin\pkgd\EndlessSky.exe EndlessSky.exe
          COPY ".\dev64\bin\*.dll" .
          COPY C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32\lib\libgcc_s_seh-1.dll .
          COPY C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32\lib\libstdc++-6.dll .
          COPY C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\x86_64-w64-mingw32\lib\libwinpthread-1.dll .
      - name: Package Application
        run: 7z a ${{ env.OUTPUT }} .\sounds\ .\images\ .\data\ *.dll license.txt keys.txt icon.png EndlessSky.exe credits.txt copyright changelog
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}
      - name: Upload to continuous release
        run: |
          gothub upload \
            --user "$(echo ${{ github.repository }} | cut -d/ -f1)" \
            --repo "$(echo ${{ github.repository }} | cut -d/ -f2)" \
            --tag continuous \
            --name ${{ env.OUTPUT }} \
            --file ${{ env.OUTPUT }}
        shell: bash

  macos_x86_64:
    runs-on: macos-latest
    needs: setup
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OUTPUT: EndlessSky-macOS-${{ github.sha }}.zip
    steps:
      - uses: actions/checkout@v2
      - name: Install gothub
        run: |
          go get github.com/itchio/gothub
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
      - name: Install dependencies
        run: brew install libpng libjpeg-turbo libmad sdl2 p7zip
      - name: Adjust library paths
        run: |
          install_name_tool -id "@rpath/libpng16.16.dylib" /usr/local/lib/libpng16.16.dylib
          install_name_tool -id "@rpath/libmad.0.2.1.dylib" /usr/local/lib/libmad.0.2.1.dylib
          install_name_tool -id "@rpath/libturbojpeg.0.dylib" /usr/local/opt/libjpeg-turbo/lib/libturbojpeg.0.dylib
          install_name_tool -id "@rpath/libSDL2-2.0.0.dylib" /usr/local/lib/libSDL2-2.0.0.dylib
      - name: Adjust version strings
        run: |
          perl -p -i -e 's/(Endless Sky) [\d.]+/$1 ${{ github.sha }}/ig' source/main.cpp
          perl -p -i -e "s/version [\d.]+/$(git log --pretty="format:%nBuilt: $(date -u '+%Y-%m-%d %H:%M') UTC%nLast change by %an: %n %s" -1 | fmt -w 33 -c -s)/ig" credits.txt
          perl -0777 -p -i -e 's/(CFBundleShortVersionString.*?)[\d.]+/$1sha256.${{ github.sha }}/igs' XCode/EndlessSky-Info.plist
        shell: bash
      - name: Build Application
        run: xcodebuild -configuration "Release" -jobs $(sysctl -n hw.logicalcpu) -quiet
      - name: Package Application
        run: |
          cd build/Release
          7z a ${{ github.workspace }}/${{ env.OUTPUT }} Endless\ Sky.app
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.OUTPUT }}
          path: ${{ env.OUTPUT }}
      - name: Upload to continuous release
        run: |
          gothub upload \
            --user "$(echo ${{ github.repository }} | cut -d/ -f1)" \
            --repo "$(echo ${{ github.repository }} | cut -d/ -f2)" \
            --tag continuous \
            --name ${{ env.OUTPUT }} \
            --file ${{ env.OUTPUT }}
